[{
	"id": "fff862d4.8ce4d",
	"type": "tab",
	"label": "Flow 3",
	"disabled": false,
	"info": ""
}, {
	"id": "f6959bf.d1fba68",
	"type": "inject",
	"z": "fff862d4.8ce4d",
	"name": "Set your coordinates here",
	"topic": "",
	"payload": "{\"lat\":40,\"lon\":2}",
	"payloadType": "json",
	"repeat": "300",
	"crontab": "",
	"once": false,
	"onceDelay": 0.1,
	"x": 220,
	"y": 140,
	"wires": [
		["db2d4ab3.a825e8"]
	]
}, {
	"id": "fcaee7e3.feba58",
	"type": "debug",
	"z": "fff862d4.8ce4d",
	"name": "",
	"active": false,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "true",
	"targetType": "full",
	"x": 1170,
	"y": 140,
	"wires": []
}, {
	"id": "7a27cbfe.435ea4",
	"type": "inject",
	"z": "fff862d4.8ce4d",
	"name": "",
	"topic": "",
	"payload": "",
	"payloadType": "date",
	"repeat": "10",
	"crontab": "",
	"once": false,
	"onceDelay": 0.1,
	"x": 190,
	"y": 460,
	"wires": [
		["b91b4977.1d4288"]
	]
}, {
	"id": "b91b4977.1d4288",
	"type": "function",
	"z": "fff862d4.8ce4d",
	"name": "Generate payload",
	"func": "// Generamos 4 variables aleatorias:\n\nseed1 = Math.random() -0.5;\nseed2 = Math.random() -0.5;\nseed3 = Math.random() -0.5;\nseed4 = Math.random() -0.5;\n\n// Acedemos a la info de velocidad del viento y dirección\n// almacenada en el contexto del flujo:\nWindSpeed = parseInt(flow.get('wspeed'));\nWindDirection = parseInt(flow.get('wdir'));\n\n// Convertimos a radianes\nwdir=WindDirection*Math.PI/180;\n\n\n\n// Generamos las variables del aerogenerador :\n\nTurbineSpeed = (1.5*WindSpeed) + (seed1);\n\nPower = (TurbineSpeed*15) + (seed2*4);\n\n// La vibración en X es máxima con vientos de W o E\nVibrationX = (seed3/20 + Math.abs(Math.sin(wdir))/5 + WindSpeed/100);\n\n// La vibración en Y es máxima con vientos de N o S\nVibrationY = (seed4/20 + Math.abs(Math.cos(wdir))/5 + WindSpeed/100);\n\nmsg.payload = {\"WindSpeed\": WindSpeed.toFixed(2),\"WindDirection\": WindDirection, \"TurbineSpeed\":TurbineSpeed.toFixed(2),\"Power\":Power.toFixed(2),\"VibrationX\":VibrationX.toFixed(3),\"VibrationY\":VibrationY.toFixed(3)};\n\n\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 430,
	"y": 460,
	"wires": [
		["6d015b3e.7b8404", "f0c56ed2.dc36a"]
	]
}, {
	"id": "6d015b3e.7b8404",
	"type": "debug",
	"z": "fff862d4.8ce4d",
	"name": "",
	"active": true,
	"tosidebar": true,
	"console": false,
	"tostatus": false,
	"complete": "false",
	"x": 870,
	"y": 600,
	"wires": []
}, {
	"id": "db2d4ab3.a825e8",
	"type": "function",
	"z": "fff862d4.8ce4d",
	"name": "Set location",
	"func": "latitude = msg.payload.lat;\nlongitude = msg.payload.lon;\n\nURL_base = \"http://weatherapi.market.xiaomi.com/wtr-v3/weather/all?\";\n\nURL_coords = \"latitude=\"+latitude+\"&longitude=\"+longitude;\n\nURL_trail = \"&appKey=weather20180131&sign=zUFJoAR2ZVrDy1vF3D07&isGlobal=false&locale=en_US\";\n\nURL = URL_base + URL_coords + URL_trail;\n\nmsg.url = URL;\nmsg.method = \"GET\";\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 430,
	"y": 140,
	"wires": [
		["40754816.923ac8"]
	]
}, {
	"id": "40754816.923ac8",
	"type": "http request",
	"z": "fff862d4.8ce4d",
	"name": "Weather Service",
	"method": "use",
	"ret": "txt",
	"paytoqs": false,
	"url": "",
	"tls": "",
	"persist": false,
	"proxy": "",
	"authType": "",
	"x": 620,
	"y": 140,
	"wires": [
		["f399a349.8e73e"]
	]
}, {
	"id": "f399a349.8e73e",
	"type": "json",
	"z": "fff862d4.8ce4d",
	"name": "",
	"property": "payload",
	"action": "",
	"pretty": false,
	"x": 810,
	"y": 140,
	"wires": [
		["f690444a.b97198"]
	]
}, {
	"id": "f690444a.b97198",
	"type": "change",
	"z": "fff862d4.8ce4d",
	"name": "Set Context",
	"rules": [{
		"t": "set",
		"p": "wdir",
		"pt": "flow",
		"to": "payload.current.wind.direction.value",
		"tot": "msg"
	}, {
		"t": "set",
		"p": "wspeed",
		"pt": "flow",
		"to": "payload.current.wind.speed.value",
		"tot": "msg"
	}],
	"action": "",
	"property": "",
	"from": "",
	"to": "",
	"reg": false,
	"x": 990,
	"y": 140,
	"wires": [
		["fcaee7e3.feba58"]
	]
}, {
	"id": "f0c56ed2.dc36a",
	"type": "mqtt out",
	"z": "fff862d4.8ce4d",
	"name": "Watson IoT Platform",
	"topic": "iot-2/evt/status/fmt/json",
	"qos": "",
	"retain": "",
	"broker": "3049b21c.2f012e",
	"x": 910,
	"y": 460,
	"wires": []
}, {
	"id": "3049b21c.2f012e",
	"type": "mqtt-broker",
	"z": "",
	"name": "",
	"broker": "hfhmai.messaging.internetofthings.ibmcloud.com",
	"port": "1883",
	"tls": "",
	"clientid": "d:hfhmai:MyType:MyDevice00",
	"usetls": false,
	"compatmode": false,
	"keepalive": "60",
	"cleansession": true,
	"birthTopic": "",
	"birthQos": "0",
	"birthPayload": "",
	"closeTopic": "",
	"closeQos": "0",
	"closePayload": "",
	"willTopic": "",
	"willQos": "0",
	"willPayload": ""
}]
